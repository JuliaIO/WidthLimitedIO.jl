var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = WidthLimitedIO","category":"page"},{"location":"#WidthLimitedIO","page":"Home","title":"WidthLimitedIO","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for WidthLimitedIO.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [WidthLimitedIO]","category":"page"},{"location":"#WidthLimitedIO.IncrementalANSIEscape","page":"Home","title":"WidthLimitedIO.IncrementalANSIEscape","text":"IncrementalANSIEscape\n\nAn @enum collection encoding previously-received escape codes. Their primary purpose is to decide whether we are done rendering the escape code.\n\nSee ansi_esc_status for usage details.\n\n\n\n\n\n","category":"type"},{"location":"#WidthLimitedIO.ansi_esc_status-Tuple{WidthLimitedIO.IncrementalANSIEscape, Char}","page":"Home","title":"WidthLimitedIO.ansi_esc_status","text":"ansi_esc_status(status::IncrementalANSIEscape, c::Char) → status\nansi_esc_status(c::Char) → status\n\nReturn a status code indicating our position within an ANSI terminal escape code.\n\nExamples\n\njulia> status = ansi_esc_status('m')   # ordinary character with no prior `status`\nNONE::IncrementalANSIEscape = 0\n\njulia> status = ansi_esc_status(status, '\u001b')  # start an escape sequence\nESCAPE1::IncrementalANSIEscape = 1\n\njulia> status = ansi_esc_status(status, '[')   # CSI\nESCAPE::IncrementalANSIEscape = 2\n\njulia> status = ansi_esc_status(status, '3')   # can be multiple digits\nPARAMETER::IncrementalANSIEscape = 5\n\njulia> status = ansi_esc_status(status, 'm')   # terminating final character\nFINAL::IncrementalANSIEscape = 6\n\njulia> status = ansi_esc_status(status, 'm')   # now 'm' is again an ordinary character\nNONE::IncrementalANSIEscape = 0\n\n\n\n\n\n","category":"method"}]
}
